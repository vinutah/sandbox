Usage for extractFeat from toolchain-origin:

/usr/local/bin/extractFeat \
  <input-binary> \
  <feature-type> \
  <feature-size> \
  <output-file>

<input-binary>   What to extract from

<feature-type>   Choices are
                 - libcall:    ?
                 - insns_freq: ?
                 - idiom:      ?
                 - graphlet:   ?

<feature-size>   How big the features are?

<output-file>    Where to store the extracted features

--------------------------------------------------------------------------------

I don't understand the output format.  I believe the one we want is idiom with
a feature size of 1, 2, or 3.  But I am unsure.  When run under those
conditions, you get two output files, a featlist file and an instances file.

extracted-runTests.idiom.1.dat.featlist:
  1 I1170000fffd
  2 I150010
  3 I190010
  4 I2190004fffe
  5 I22200000000
  6 I25fffd
  7 I340004fffe
  8 I7fffd
  9 I1170001fffe
  10 I11700020004
  11 I1170007fffe
  12 I1170008fffe
  13 I11700090002
  14 I19f00060004
  15 I1c900000004
  16 I1c900040004
  17 I3b0004fffe
  18 I47a0f050f05
  19 Ie2
  ...

The feature list file is obiously some sort of indexing into the features.
What I don't understand is what the I7fffd feature actually represents (to pick
out a single example).

extracted-runTests.idiom.1.dat.instances:
  403d00 1:1.000 2:1.000 3:1.000 4:1.000 5:1.000 6:1.000 7:1.000 8:1.000
  404730
  404740 9:1.000 10:1.000 11:1.000 12:1.000 13:1.000 14:1.000 15:1.000 16:1.000 17:1.000 18:1.000 19:1.000 20:1.000 21:1.000 22:1.000 23:1.000 24:1.000 25:1.000 26:1.000 27:1.000 28:1.000
  404770 29:1.000 30:1.000 31:1.000 32:1.000 33:1.000 34:1.000 35:1.000 36:1.000 37:1.000 3:1.000 38:1.000 39:1.000 6:1.000 40:1.000 41:1.000 42:1.000 7:1.000 8:1.000 43:1.000 44:1.000
  4047b0 45:1.000 46:1.000 31:1.000 47:1.000 32:1.000 33:1.000 34:1.000 48:1.000 49:1.000 50:1.000 51:1.000 52:1.000 3:1.000 53:1.000 54:1.000 38:1.000 39:1.000 6:2.000 41:1.000 55:2.000 56:1.000 57:1.000 7:1.000 8:1.000 58:1.000 44:1.000
  4047f0 59:1.000 60:1.000 61:1.000 62:1.000 63:1.000 38:1.000 64:1.000 24:1.000
  404810 65:1.000 31:1.000 66:1.000 67:1.000 61:1.000 62:1.000 3:1.000 63:1.000 38:1.000 6:1.000 68:1.000 69:1.000 7:1.000 70:1.000
  404836 1:1.000 71:1.000 72:1.000 34:1.000 62:1.000 73:1.000 74:1.000 5:1.000 38:1.000 75:1.000 76:1.000 77:1.000 7:1.000 8:1.000
  40484c 78:1.000 79:1.000 80:1.000 81:1.000 62:1.000 82:1.000 83:1.000 84:1.000 85:1.000 38:1.000 86:1.000 87:1.000 6:1.000 24:2.000 77:1.000 88:1.000 89:1.000 8:1.000 90:1.000
  40487b 78:1.000 79:1.000 80:1.000 81:1.000 62:1.000 82:1.000 83:1.000 84:1.000 85:1.000 38:1.000 86:1.000 87:1.000 6:1.000 24:2.000 77:1.000 88:1.000 89:1.000 8:1.000 90:1.000
  4048aa 91:2.000 92:1.000 93:1.000 78:5.000 94:1.000 95:1.000 96:1.000 97:1.000 98:1.000 99:3.000 100:1.000 101:1.000 102:1.000 103:1.000 104:1.000 80:13.000 105:1.000 106:1.000 107:1.000 108:1.000 109:1.000 110:1.000 111:1.000 34:1.000 112:1.000 62:1.000 83:1.000 113:1.000
  114:1.000 115:1.000 5:5.000 116:2.000 117:1.000 38:1.000 118:1.000 119:2.000 86:13.000 120:1.000 121:1.000 122:1.000 123:1.000 87:1.000 6:1.000 24:14.000 124:1.000 76:1.000 125:1.000 88:1.000 8:1.000 126:1.000 127:1.000 128:3.000 129:1.000 130:3.000 131:1.000 132:1.000
  4049f0 133:1.000 134:1.000 34:1.000 62:1.000 38:1.000 135:1.000 76:1.000 8:1.000
  4049fe 136:1.000 137:1.000 34:1.000 62:1.000 38:1.000 138:1.000 76:1.000 8:1.000
  404a0c 139:1.000 34:1.000 62:1.000 38:1.000 76:1.000 8:1.000 140:1.000 141:1.000
  404a18 133:1.000 134:1.000 34:1.000 62:1.000 38:1.000 135:1.000 76:1.000 8:1.000
  ...

The instances file looks like it is in the format

  <address> [<feature-id>:<count?> ...]

I don't know if the number after the colon is a count or a weight for that
feature.  It is a sparse representation of the feature vector where only the
non-zero elements are specified.  This I can work with.  I basically just do
not understand the feature from the feature list.

#
# vim: nowrap
#
